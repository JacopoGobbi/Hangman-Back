group 'io.github.jacopogobbi'
version "1.0"


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
        classpath("org.springframework:spring-beans:4.3.9.RELEASE")
        classpath("org.postgresql:postgresql:42.1.1")
        classpath("org.hibernate:hibernate-core:5.2.10.Final")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

jar {
    baseName = 'gs-spring-boot'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.postgresql:postgresql:42.1.1")
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    // end::jetty[]

    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]

    compile("org.springframework.data:spring-data-jpa:1.11.4.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-security:1.5.4.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:1.5.4.RELEASE")

    compile('com.google.guava:guava:22.0')

    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

springBoot {
    mainClass = "jacopogobbi.test.hangman.Application"
}

processResources {
    filesMatching('**/application.yml') {
        filter {
            it.replace('%APP_VERSION_TOKEN%', version)
        }
    }
}